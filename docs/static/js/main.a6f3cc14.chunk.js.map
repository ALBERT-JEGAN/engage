{"version":3,"sources":["images/logo.png","worker/worker.js","worker/workerSetup.js","util/util.js","pages/Engage/EngageContainer.js","components/MenuContainer.js","applicationConstants.js","baseApp/BaseApp.js","index.js"],"names":["module","exports","exceptionList","percenatage","name","type","i","push","key","exception","Number","Math","floor","random","status","compDate","guestId","issuer","sourceCompAmount","exceptionType","self","addEventListener","e","data","action","postMessage","slice","start","end","WebWorker","worker","code","toString","blob","Blob","Worker","URL","createObjectURL","Sorter","a","b","dateA","dateB","moment","utc","diff","columns","title","dataIndex","sorter","compare","value","nextValue","multiple","filters","text","onFilter","list","indexOf","EngageContainer","props","componentDidMount","getExceptionInformation","document","querySelector","onScroll","event","setState","exceptionsList","state","listCount","defaultListCount","loading","selectedRowKeys","bind","onSelectedRowKeysChange","selectRow","clearSelectedRows","this","retrieveInfo","maxScroll","target","scrollHeight","clientHeight","scrollTop","record","splice","rowSelection","onChange","columnWidth","renderCell","className","dataSource","pagination","scroll","y","scrollToFirstRowOnChange","onRow","onClick","Component","MenuContainer","menuList","mode","map","icon","Item","GuestSlectionList","HeaderMenu","MailOutlined","AppstoreOutlined","BaseApp","engage","React","createRef","saveGuestDetail","current","length","message","info","Header","Layout","Content","dropDownMenu","src","logo","width","overlay","placement","ref","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a6f3cc14.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.1f568862.png\";","export default () => {\r\n\tconst exceptionList = [],\r\n\t\t\tpercenatage = ['14%', '15%', '13%', '17%', '12%', '11%', '10%', '3%', '20%'],\r\n\t\t\tname = ['Albert', 'Michael', 'Alvin', 'Owen', 'Guna', 'Raj'],\r\n\t\t\ttype = ['Comp Assistant not used', 'Qualified exceeds policy', 'Retroactive comp assist', 'Not qualified'];\r\n\t\r\n\tfor (let i = 0; i < 1000; i++) {\r\n\t  exceptionList.push({\r\n\t\tkey: i,\r\n\t\texception: percenatage[Number(Math.floor(Math.random()*8))],\r\n\t\tstatus: i%2 ===0 && 'Open' || 'Close',\r\n\t\tcompDate: `Jan ${Number(Math.floor(Math.random()*8))+1}, 2020`,\r\n\t\tguestId: 1234567+i,\r\n\t\tname: name[Number(Math.floor(Math.random()*5))],\r\n\t\tissuer: 'Thomas',\r\n\t\tsourceCompAmount: `1000`,\r\n\t\texceptionType: type[Number(Math.floor(Math.random()*3))],\r\n\t  });\r\n\t}\r\n\t\r\n\tself.addEventListener('message', e => { // eslint-disable-line no-restricted-globals\r\n\t\tif (!e) return;\r\n\r\n\t\te.data.action === \"GET\" && postMessage(exceptionList.slice(e.data.start, e.data.end));\r\n\t});\r\n}","export default class WebWorker {\r\n\tconstructor(worker) {\r\n\t\tconst code = worker.toString();\r\n\t\tconst blob = new Blob(['('+code+')()']);\r\n\t\treturn new Worker(URL.createObjectURL(blob));\r\n\t}\r\n}\r\n","import moment from \"moment\";\r\n\r\nconst dateSort = (dateA, dateB) => moment.utc(dateA).diff(moment.utc(dateB));\r\n\r\nconst defaultSort = (a, b) => {\r\n  if (a < b) return -1;\r\n  if (b < a) return 1;\r\n  return 0;\r\n};\r\n\r\nexport const Sorter = {\r\n  DEFAULT: defaultSort,\r\n  DATE: dateSort\r\n};\r\n","import React, { Component } from 'react';\r\nimport { Table } from 'antd';\r\nimport moment from \"moment\";\r\nimport worker from './../../worker/worker.js';\r\nimport WebWorker from './../../worker/workerSetup';\r\nimport { Sorter } from './../../util/util';\r\n\r\n\r\nlet columns = [\r\n  {\r\n    title: 'Exception',\r\n    dataIndex: 'exception',\r\n\tsorter: {\r\n\t\tcompare: (a, b) => {\r\n\t\t  let value = Number(a.exception.slice(0, -1)),\r\n\t\t\tnextValue = Number(b.exception.slice(0, -1));\r\n\t\t\t\r\n\t\t  return Sorter.DEFAULT(value, nextValue);\r\n\t\t},\r\n\t\tmultiple: 1\r\n\t}\r\n  },\r\n  {\r\n    title: 'Status',\r\n    dataIndex: 'status',\r\n\tkey: 'status',\r\n\tfilters: [\r\n\t\t{\r\n\t\t\ttext: 'Open',\r\n\t\t\tvalue: 'Open'\t\r\n\t\t},\r\n\t\t{\r\n\t\t\ttext: 'Close',\r\n\t\t\tvalue: 'Close'\t\r\n\t\t}\r\n\t],\r\n\tonFilter: (value, list) => list.status.indexOf(value) === 0\r\n  },\r\n  {\r\n    title: 'Comp Date',\r\n    dataIndex: 'compDate',\r\n\tsorter: {\r\n\t\tcompare: (dateA, dateB) => {\r\n\t\t\treturn Sorter.DATE(dateA.compDate, dateB.compDate);\r\n\t\t},\r\n\t\tmultiple: 1\r\n\t}\r\n  },\r\n  {\r\n    title: 'Guest Id',\r\n    dataIndex: 'guestId',\r\n  },\r\n  {\r\n    title: 'Name',\r\n    dataIndex: 'name',\r\n  },\r\n  {\r\n    title: 'Issuer',\r\n    dataIndex: 'issuer',\r\n  },\r\n  {\r\n    title: 'Source Comp Amount',\r\n    dataIndex: 'sourceCompAmount',\r\n  },\r\n  {\r\n    title: 'Exception Type',\r\n    dataIndex: 'exceptionType',\r\n  }\r\n];\r\n\t\r\nexport class EngageContainer extends Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props)\r\n\r\n\t\tthis.state = {\r\n\t\t\texceptionsList: [],\r\n\t\t\tdefaultListCount: 6,\r\n\t\t\tlistCount: 0,\r\n\t\t\tloading: false,\r\n\t\t\tselectedRowKeys: []\r\n\t\t}\r\n\t\t\r\n\t\tthis.worker = new WebWorker(worker);\r\n\t\tthis.onScroll = this.onScroll.bind(this);\r\n\t\tthis.onSelectedRowKeysChange = this.onSelectedRowKeysChange.bind(this);\r\n\t\tthis.selectRow = this.selectRow.bind(this);\r\n\t\tthis.clearSelectedRows = this.clearSelectedRows.bind(this);\r\n\t}\r\n\r\n\tgetExceptionInformation() {\r\n\t\tconst { defaultListCount, listCount } = this.state;\r\n\t\t\r\n\t\tlet retrieveInfo = {\r\n\t\t\taction: 'GET',\r\n\t\t\tstart: listCount,\r\n\t\t\tend: listCount + defaultListCount\r\n\t\t};\r\n\t\t\r\n\t\tthis.setState({loading: true });\r\n\t\tthis.worker.postMessage(retrieveInfo);\r\n\t}\r\n\t\r\n\tonScroll(event) {\r\n\t\tlet maxScroll = event.target.scrollHeight - event.target.clientHeight,\r\n\t\t\tcurrentScroll = event.target.scrollTop;\r\n\t\t\t\r\n\t\tcurrentScroll === maxScroll && !this.state.loading && this.getExceptionInformation();\r\n\t}\r\n\r\n\tcomponentDidMount = () => {\r\n\t\tthis.getExceptionInformation();\r\n\t\tdocument.querySelector('.ant-table-body').addEventListener(\"scroll\", this.onScroll);\r\n\t\t\r\n\t\tthis.worker.addEventListener('message', event => {\r\n\t\t\tthis.setState({\r\n\t\t\t\texceptionsList: [...this.state.exceptionsList, ...event.data],\r\n\t\t\t\tlistCount: this.state.listCount + this.state.defaultListCount,\r\n\t\t\t\tloading: false\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\t\r\n\tselectRow(record) {\r\n\t\tconst selectedRowKeys = [...this.state.selectedRowKeys];\r\n\t\tselectedRowKeys.indexOf(record.key) >= 0 && (selectedRowKeys.splice(selectedRowKeys.indexOf(record.key), 1)) || (selectedRowKeys.push(record.key));\r\n\t\t\r\n\t\tthis.setState({selectedRowKeys});\r\n\t}\r\n\t\r\n\tonSelectedRowKeysChange(selectedRowKeys) {\r\n\t\tthis.setState({selectedRowKeys});\r\n\t}\r\n\t\r\n\tclearSelectedRows() {\r\n\t\tthis.setState({selectedRowKeys: []});\r\n\t}\r\n\r\n\trender() {\r\n\t\tlet { exceptionsList, loading, selectedRowKeys } = this.state,\r\n\t\trowSelection = {\r\n\t\t\tselectedRowKeys,\r\n\t\t\tonChange: this.onSelectedRowKeysChange,\r\n\t\t\ttype:'checkbox',\r\n\t\t\tcolumnWidth: 0, // Set the width to 0\r\n\t\t\trenderCell: () => \"\", // Render nothing inside\r\n\t\t};\r\n\t\t\r\n\t\treturn (\r\n\t\t\t<Table \r\n\t\t\t\tclassName=\"exception-table\" \r\n\t\t\t\tloading={loading} \r\n\t\t\t\tcolumns={columns} \r\n\t\t\t\tdataSource={exceptionsList} \r\n\t\t\t\tpagination={false} \r\n\t\t\t\tscroll={{y:270, scrollToFirstRowOnChange: false }}\r\n\t\t\t\tonChange = {this.onChange}\r\n\t\t\t\ttitle={() => <span>GUESTS</span>}\r\n\t\t\t\trowSelection={rowSelection}\r\n\t\t\t\tonRow={(record) => ({\r\n\t\t\t\t\tonClick: () => {\r\n\t\t\t\t\t\tthis.selectRow(record);\r\n\t\t\t\t\t}\r\n\t\t\t\t})}\r\n\t\t\t/>\r\n\t\t);\r\n\t}\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Menu } from 'antd';\r\n\r\nexport const MenuContainer = function(props) {\r\n\tconst { menuList, mode = 'vertical', onClick } = props;\r\n\t\r\n\treturn (\r\n\t\t<Menu mode={mode} onClick={onClick}>\r\n\t\t\t{\r\n\t\t\t\tmenuList.map((list) => {\r\n\t\t\t\t\tconst { text, key, icon} = list;\r\n\t\t\t\t\t\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<Menu.Item key={key} icon={<icon/>}>\r\n\t\t\t\t\t\t\t{text}\r\n\t\t\t\t\t\t</Menu.Item>\r\n\t\t\t\t\t)\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t</Menu>\r\n\t );\r\n};\r\n\r\nMenuContainer.propTypes = {\r\n\tmenuList: PropTypes.array,\r\n\tmode: PropTypes.string,\r\n\tonClick: PropTypes.func\r\n};","import { MailOutlined, AppstoreOutlined } from '@ant-design/icons';\r\n\r\nexport const GuestSlectionList = [\r\n  {\r\n    text: 'Save List'\r\n  },\r\n  {\r\n    text: 'Create Campaign'\r\n  }\r\n];\r\n\r\nexport const HeaderMenu = [\r\n  {\r\n    text: 'Dashboard',\r\n\tkey: 'dashboard',\r\n\ticon: MailOutlined\r\n  },\r\n  {\r\n    text: 'Floor view',\r\n\tkey: 'floorView',\r\n\ticon: AppstoreOutlined\r\n  },\r\n  {\r\n    text: 'Data base',\r\n\tkey: 'dataBase',\r\n\ticon: MailOutlined\r\n  },\r\n  {\r\n    text: 'PD portal',\r\n\tkey: 'portal',\r\n\ticon: AppstoreOutlined\r\n  },\r\n  {\r\n    text: 'Admin',\r\n\tkey: 'admin',\r\n\ticon: MailOutlined\r\n  },\r\n  {\r\n    text: 'Settings',\r\n\tkey: 'settings',\r\n\ticon: AppstoreOutlined\r\n  }\r\n];\r\n","import React, { Component } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport { Card, Layout, Menu, Image, Dropdown, Button, message } from 'antd';\nimport { MailOutlined, AppstoreOutlined, SettingOutlined, DownOutlined } from '@ant-design/icons';\nimport { EngageContainer } from './../pages/Engage/EngageContainer';\nimport { MenuContainer } from './../components/MenuContainer';\nimport { GuestSlectionList, HeaderMenu } from './../applicationConstants';\nimport logo from './../images/logo.png';\nimport './BaseApp.scss';\nimport './../components/antd.css'\n\nexport class BaseApp extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\t\n\t\tthis.engage = React.createRef();\n\t\tthis.saveGuestDetail = this.saveGuestDetail.bind(this);\n\t}\n\t\n\tsaveGuestDetail(event) {\n\t\tlet engage = this.engage.current;\n\t\t\n\t\tdebugger;\n\t\t\n\t\tif(engage.state.selectedRowKeys.length) {\t\t\n\t\t\tmessage.info(`${engage.state.selectedRowKeys.length} Guest details saved`);\n\t\t\tengage.clearSelectedRows()\n\t\t}\n\t}\n\t\n\trender() {\n\t\tconst { Header, Content } = Layout;\n\t\t\n\t\tlet dropDownMenu = <MenuContainer menuList={GuestSlectionList} onClick={this.saveGuestDetail}/>\n\t\t\n\t\treturn(\n\t\t\t<Layout className=\"layout\">\n\t\t\t\t<Header>\n\t\t\t\t\t<Image src={logo} width={120}/>\n\t\t\t\t\t<MenuContainer menuList={HeaderMenu} mode=\"horizontal\"/>\n\t\t\t\t</Header>\n\t\t\t\t<Content>\n\t\t\t\t  <div className=\"site-layout-content\">\n\t\t\t\t\t<Card\n\t\t\t\t\t\ttitle=\"Engage\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<div className=\"btn-container\">\n\t\t\t\t\t\t\t<Button>Button</Button>\n\t\t\t\t\t\t\t<Dropdown overlay={dropDownMenu} placement=\"bottomLeft\" className=\"dropdown-menu\">\n\t\t\t\t\t\t\t  <Button>Actions</Button>\n\t\t\t\t\t\t\t</Dropdown>\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<Button className=\"report-btn\">Run Report</Button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<EngageContainer ref={this.engage}/>\n\t\t\t\t\t</Card>\n\t\t\t\t  </div>\n\t\t\t\t</Content>\n\t\t\t</Layout>\n\t\t);\n\t}\n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { BaseApp } from './baseApp/BaseApp';\n\nReactDOM.render(\n  <React.StrictMode>\n\t\t<BaseApp/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}